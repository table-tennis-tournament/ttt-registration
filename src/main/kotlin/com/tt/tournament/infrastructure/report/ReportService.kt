package com.tt.tournament.infrastructure.report

import com.tt.tournament.infrastructure.db.Discipline
import com.tt.tournament.infrastructure.db.Player
import com.tt.tournament.infrastructure.db.PlayerRepository
import org.springframework.stereotype.Service
import org.thymeleaf.TemplateEngine
import org.thymeleaf.context.Context
import org.thymeleaf.templatemode.TemplateMode
import org.thymeleaf.templateresolver.ClassLoaderTemplateResolver
import org.xhtmlrenderer.pdf.ITextRenderer
import java.io.File
import java.io.FileOutputStream
import java.io.OutputStream


private const val IMAGE_BASE_64 =
    ""

@Service
class ReportService(val playerRepository: PlayerRepository) {

    fun generateSundayReport() {
        val players = playerRepository.readAllPlayersForSunday()
        val resultList = players.map { x -> parseThymeleafTemplate(x) }
        generatePdfFromHtml(resultList, "quittungen_sonntag.pdf");
    }

    fun generateSaturdayReport() {
        val players = playerRepository.readAllPlayersForSaturday()
        val resultList = players.map { x -> parseThymeleafTemplate(x) }
        generatePdfFromHtml(resultList, "quittungen_samstag.pdf");
    }

    fun generateLists() {
        val players = playerRepository.readPlayersForDiscipline()
        val resultList = players.map { x -> parseThymeleafTemplateForLists(x.key, x.value) }
        generatePdfFromHtml(resultList, "spielerlisten.pdf");
    }

    private fun parseThymeleafTemplate(player: Player): String {
        val templateResolver = ClassLoaderTemplateResolver()
        templateResolver.suffix = ".html"
        templateResolver.templateMode = TemplateMode.HTML
        val templateEngine = TemplateEngine()
        templateEngine.setTemplateResolver(templateResolver)
        val context = Context()
        context.setVariable("base64Image", IMAGE_BASE_64)
        context.setVariable("name", player.name())
        context.setVariable("club", player.club)
        context.setVariable("disciplines", player.disciplines)
        var index = 1;
        var sum = 0;
        for (discipline in player.disciplines) {
            sum += discipline.price.toInt()
            index++
        }
        context.setVariable("sum", "$sum€")
        return templateEngine.process("receipt", context)
    }

    private fun parseThymeleafTemplateForLists(discipline: Discipline, players: List<Player>): String {
        val templateResolver = ClassLoaderTemplateResolver()
        templateResolver.suffix = ".html"
        templateResolver.templateMode = TemplateMode.HTML
        val templateEngine = TemplateEngine()
        templateEngine.setTemplateResolver(templateResolver)
        val context = Context()
        context.setVariable("players", players.sortedBy { it.lastName })
        context.setVariable("disciplineName", discipline.name)
        return templateEngine.process("list", context)
    }

    private fun generatePdfFromHtml(html: List<String>, fileName: String) {
        val outputFolder = (System.getProperty("user.home") + File.separator) + fileName
        println(System.getProperty("user.home"))
        val outputStream: OutputStream = FileOutputStream(outputFolder)
        val renderer = ITextRenderer()

        renderer.setDocumentFromString(html.get(0))
        renderer.layout()
        renderer.createPDF(outputStream, false)


        // each page after the first we add using layout() followed by writeNextDocument()
        for (i in 1 until html.size) {
            renderer.setDocumentFromString(html.get(i))
            renderer.layout()
            renderer.writeNextDocument()
        }
        renderer.finishPDF()
        outputStream.close()
    }
}